package view;

/*
The ItemDisplay is used within other JPanel Forms.
 */
// @author jared
import model.entity.Armor;
import model.entity.Item;
import model.entity.Potion;
import model.entity.Weapon;
import java.awt.BorderLayout;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

public class ItemDisplay extends javax.swing.JPanel {

    /* Save scaled instances of icons (optimization) */
    private static ImageIcon weaponIcon = null;
    private static ImageIcon armorIcon = null;
    private static ImageIcon potionIcon = null;

    private boolean isCustom; // is this panel holding a custom message

    /**
     * Creates new form ItemDisplay
     */
    public ItemDisplay(Item item) {
        initComponents();
        initScaledInstances(); // initialize scaled instances of icons at first use
        iconHolder.setLayout(new BorderLayout()); // initialize iconHolder
        setItem(item);
    }

    /* Change the item being displayed */
    public void setItem(Item item) { // can be called again after instantiated
        if (item instanceof Weapon) {
            JLabel iconWrapper = new JLabel(weaponIcon, JLabel.CENTER);
            iconHolder.removeAll();
            iconHolder.add(iconWrapper, BorderLayout.CENTER);
            iconHolder.setToolTipText("Weapon");
            nameLabel.setText(item.getName());
            specsLabel.setText(((Weapon) item).getSpecsString());
            descLabel.setText(item.getDescription());
        } else if (item instanceof Armor) {
            JLabel iconWrapper = new JLabel(armorIcon, JLabel.CENTER);
            iconHolder.removeAll();
            iconHolder.add(iconWrapper, BorderLayout.CENTER);
            iconHolder.setToolTipText("Armor");
            nameLabel.setText(item.getName());
            specsLabel.setText(((Armor) item).getSpecsString());
            descLabel.setText(item.getDescription());
        } else if (item instanceof Potion) {
            JLabel iconWrapper = new JLabel(potionIcon, JLabel.CENTER);
            iconHolder.removeAll();
            iconHolder.add(iconWrapper, BorderLayout.CENTER);
            iconHolder.setToolTipText("Potion");
            nameLabel.setText(item.getName());
            specsLabel.setText(((Potion) item).getSpecsString());
            descLabel.setText(item.getDescription());
        } else { // e.g. null
            iconHolder.removeAll();
            iconHolder.repaint();
            iconHolder.setToolTipText(null);
            nameLabel.setText("No Item");
            specsLabel.setText("-");
            descLabel.setText("-");
        }
        isCustom = false;
    }

    public void setAsEmptySlot() {
        iconHolder.removeAll();
        iconHolder.repaint();
        iconHolder.setToolTipText(null);
        nameLabel.setText("Empty Slot");
        specsLabel.setText("-");
        descLabel.setText("-");
        isCustom = true;
    }

    public void setAsInvisible() {
        iconHolder.removeAll();
        iconHolder.repaint();
        iconHolder.setToolTipText(null);
        nameLabel.setText(" ");
        specsLabel.setText(" ");
        descLabel.setText(" ");
        isCustom = true;
    }

    public void becomeLabel(String text) {
        iconHolder.removeAll();
        iconHolder.repaint();
        iconHolder.setToolTipText(null);
        nameLabel.setText(text);
        specsLabel.setText(" ");
        descLabel.setText(" ");
        isCustom = true;
    }

    public void becomeLabel(String firstText, String secondText) {
        iconHolder.removeAll();
        iconHolder.repaint();
        iconHolder.setToolTipText(null);
        nameLabel.setText(firstText);
        specsLabel.setText(secondText);
        descLabel.setText(" ");
        isCustom = true;
    }

    public boolean isDisplayingMessage() {
        return isCustom;
    }

    private void initScaledInstances() { // initialize scaled instances of icons only once
        if (weaponIcon == null) {
            weaponIcon = new ImageIcon(new ImageIcon("icons/weapon.png").getImage().getScaledInstance(35, 35, Image.SCALE_SMOOTH));
        }
        if (armorIcon == null) {
            armorIcon = new ImageIcon(new ImageIcon("icons/armor.png").getImage().getScaledInstance(35, 35, Image.SCALE_SMOOTH));
        }
        if (potionIcon == null) {
            potionIcon = new ImageIcon(new ImageIcon("icons/potion.png").getImage().getScaledInstance(35, 35, Image.SCALE_SMOOTH));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        iconHolder = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        specsLabel = new javax.swing.JLabel();
        descLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(42, 42, 42)));

        iconHolder.setBackground(new java.awt.Color(51, 51, 51));
        iconHolder.setMaximumSize(new java.awt.Dimension(46, 46));
        iconHolder.setMinimumSize(new java.awt.Dimension(46, 46));
        iconHolder.setPreferredSize(new java.awt.Dimension(46, 46));

        javax.swing.GroupLayout iconHolderLayout = new javax.swing.GroupLayout(iconHolder);
        iconHolder.setLayout(iconHolderLayout);
        iconHolderLayout.setHorizontalGroup(
            iconHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );
        iconHolderLayout.setVerticalGroup(
            iconHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        nameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nameLabel.setText("Pocket Dagger");

        specsLabel.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        specsLabel.setText("5-20 Damage | 0 AP | 11 Durability");

        descLabel.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        descLabel.setText("You kept it from a past life...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(specsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(descLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameLabel)
                        .addGap(0, 0, 0)
                        .addComponent(specsLabel)
                        .addGap(0, 0, 0)
                        .addComponent(descLabel))
                    .addComponent(iconHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descLabel;
    private javax.swing.JPanel iconHolder;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel specsLabel;
    // End of variables declaration//GEN-END:variables
}
